{"version":3,"sources":["constants/dogBingoOptions.js","components/BingoItem.js","components/Card.js","components/Dialogue.js","App.js","reportWebVitals.js","index.js"],"names":["dogBingoOptions","BingoItem","props","Grid","item","className","align-items","onClick","e","handleClick","class","style","fontSize","this","dimension","React","Component","Card","createRows","slots","console","log","bingoRows","i","slice","state","rows","bind","gridSquare","card_tiles","push","width","aspectRatio","lined","hit_lines","includes","idx","handle","container","xs","Dialogue","Dialog","onClose","handleClose","aria-labelledby","open","showState","DialogTitle","cursor","id","icon","faDog","DialogContent","dividers","Typography","variant","fontWeight","textAlign","gutterBottom","Button","color","theme","createTheme","palette","primary","main","alert","App","handleClear","textConts","document","querySelectorAll","length","innerHTML","setState","hits","prevCompleted","removeMarked","getElementById","opacity","squares","getElementsByClassName","classList","remove","handleGenerateRandom","randCards","generateCards","fillSquares","indicateCompletedLine","compLine","forEach","targElement","parentElement","add","checkWholeSquare","max","pool","Array","apply","map","_","arr","Math","floor","random","dogEl","pick","fill","column","options","event","target","undefined","lastChild","checkLine","setAttribute","hit_pool","hit_step","result","nxtNum","generateNums","clickedEl","lines","slash1","slash2","row","col","o","hit","parseInt","every","c","ThemeProvider","Alert","severity","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"uOAAaA,EAAkB,CAAC,iBAChC,SACA,WACA,mBACA,gBACA,YACA,gBACA,gBACA,YACA,UACA,gBACA,gBACA,oBACA,yBACA,WACA,eACA,kBACA,gBACA,YACA,gBACA,gBACA,iBACA,gBACA,oBACA,iBACA,eACA,gBACA,eACA,kBACA,gBACA,QACA,YACA,gBACA,YACA,UACA,mBACA,iBACA,sBACA,iBACA,WACA,gBACA,aACA,WACA,iBACA,YACA,kBACA,cACA,mBACA,WACA,YACA,WACA,aACA,UACA,QACA,YACA,oBACA,eACA,wBACA,WACA,UACA,SACA,UACA,gBACA,sBACA,wBACA,YACA,cACA,SACA,wBACA,mBACA,aACA,SACA,UACA,MACA,UACA,mBACA,aACA,UACA,QACA,YACA,eACA,eACA,mBACA,aACA,sBACA,uBACA,kBACA,WACA,sBACA,uBACA,mBACA,qBACA,UACA,YACA,W,wBC1FqBC,E,kDACjB,WAAYC,GAAO,uCACXA,G,0CAIR,WAAS,IAAD,OACN,OACE,cAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,UAAU,SAASC,cAAY,SACxCC,QAAS,SAACC,GAAD,OAAO,EAAKN,MAAMO,YAAYD,IADzC,SAEQ,sBAAME,MAAM,eAAeC,MAAO,CAACC,SAAUC,KAAKX,MAAMY,WAAa,EAAI,OAAS,gB,GAV3DC,IAAMC,WCExBC,G,wDACnB,WAAYf,GAAQ,IAAD,8BACjB,cAAMA,IAQRgB,WAAa,WAAO,IAAD,EACY,EAAKhB,MAA1BiB,EADS,EACTA,MAAOL,EADE,EACFA,UACfM,QAAQC,IAAI,QAASF,GAErB,IADA,IAAIG,EAAY,GACPC,EAAI,EAAGA,EAAIT,EAAWS,IAC7BD,EAAUC,GAAKJ,EAAMK,MAAMV,EAAYS,EAAGT,EAAYS,EAAIT,GAE5D,OAAOQ,GAdP,EAAKG,MAAQ,CACXC,KAAM,IAER,EAAKR,WAAa,EAAKA,WAAWS,KAAhB,gBALD,E,0CAoBnB,WAGE,IAFA,IAAMC,EAAaf,KAAKX,MAAMY,UAAYD,KAAKX,MAAMY,UACjDe,EAAa,GACRN,EAAI,EAAGA,EA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","file":"static/js/main.82e51c9c.chunk.js","sourcesContent":["export const dogBingoOptions = [\"Abandoned Poop\",\n\"Beagle\",\n\"Belly up\",\n\"Big man/tiny dog\",\n\"Black & White\",\n\"Black dog\",\n\"Border Collie\",\n\"Brown & White\",\n\"Brown Dog\",\n\"Bulldog\",\n\"Butt Dragging\",\n\"Butt Sniffing\",\n\"Butt Sniffing Duo\",\n\"Cat in a pram/backpack\",\n\"Cavoodle\",\n\"Chasing Ball\",\n\"Chasing Frisbee\",\n\"Chasing Stick\",\n\"Chihuahua\",\n\"Chihuahua Duo\",\n\"Chocolate dog\",\n\"Collar - Black\",\n\"Collar - Blue\",\n\"Collar - Diamante\",\n\"Collar - Green\",\n\"Collar - LED\",\n\"Collar - Pink\",\n\"Collar - Red\",\n\"Collar - Spiked\",\n\"Cone of Shame\",\n\"Corgi\",\n\"Dachshund\",\n\"Dachshund Duo\",\n\"Dalmatian\",\n\"Digging\",\n\"Dog with a stick\",\n\"Dog with a toy\",\n\"Dog/Owner lookalike\",\n\"Duo - Any kind\",\n\"Dyed fur\",\n\"Ears - floppy\",\n\"Ears - wet\",\n\"Fighting\",\n\"French Bulldog\",\n\"Galloping\",\n\"German Shepherd\",\n\"Giant floof\",\n\"Golden Retriever\",\n\"Grey Dog\",\n\"Greyhound\",\n\"HUGE dog\",\n\"Happy face\",\n\"Humping\",\n\"Husky\",\n\"In a pram\",\n\"Italian Greyhound\",\n\"Jack Russell\",\n\"King Charles Cavalier\",\n\"Labrador\",\n\"Maltese\",\n\"Muzzle\",\n\"Old Dog\",\n\"On skateboard\",\n\"Owner ignoring poop\",\n\"Owner picking up poop\",\n\"Pack (4+)\",\n\"Patched Eye\",\n\"Peeing\",\n\"Peeing on a lamp post\",\n\"Peeing on a tree\",\n\"Pomeranian\",\n\"Poodle\",\n\"Pooping\",\n\"Pug\",\n\"Pug Duo\",\n\"Receiving treats\",\n\"Rottweiler\",\n\"Samoyed\",\n\"Scarf\",\n\"Shiba Inu\",\n\"Slobbery dog\",\n\"Sniffing Pee\",\n\"Three legged dog\",\n\"Tiny Floof\",\n\"Tiny aggressive dog\",\n\"Tiny dog in a jacket\",\n\"Trio - Any kind\",\n\"Trotting\",\n\"Two dogs, one stick\",\n\"Two sniffs, one butt\",\n\"VERY waggly tail\",\n\"Wearing Sunglasses\",\n\"Wet dog\",\n\"White Dog\",\n\"Zooming\"]","import React from 'react'\nimport { Grid } from '@material-ui/core';\nimport { Textfit } from 'react-textfit';\n\nexport default class BingoItem extends React.Component{\n    constructor(props){\n      super(props);\n\n    }\n\n    render(){\n      return(\n        <Grid item className=\"square\" align-items=\"center\"\n          onClick={(e) => this.props.handleClick(e)}>\n                <span class=\"text-content\" style={{fontSize: this.props.dimension <= 6 ? '20px' : '16px'}}></span>\n        </Grid>\n      );\n    }\n  }","import React, { Component } from 'react'\nimport BingoItem from './BingoItem'\nimport { Grid } from '@material-ui/core';\n\nimport '../App.css'\n\nexport default class Card extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      rows: []\n    }\n    this.createRows = this.createRows.bind(this)\n    \n  }\n\n  createRows = () => {\n    const { slots, dimension } = this.props\n    console.log(\"SLOTS\", slots)\n    let bingoRows = [];\n    for (let i = 0; i < dimension; i++) {\n      bingoRows[i] = slots.slice(dimension * i, dimension * i + dimension)\n    }\n    return bingoRows\n  }\n\n\n  render() {\n    const gridSquare = this.props.dimension * this.props.dimension\n    let card_tiles = [];\n    for (let i = 0; i < gridSquare; i++) {\n      \n      card_tiles.push(\n        <Grid item style={{width: `calc(100% / ${this.props.dimension}`, aspectRatio: '1'}}>\n          <BingoItem\n            key={i}\n            lined={((this.props.hit_lines || []).includes(i))}\n            idx={i} slots={this.props.slots}\n            handleClick={this.props.handle}\n            dimension={this.props.dimension}\n          />\n        </Grid>\n      )\n    }\n    // this.props.slots.map((s, i) => \n    // <Grid item style={{width: '20%'}}>\n    // <BingoItem key={i} active={ ((this.props.hits || []).includes(s)) } \n    //   lined={ ((this.props.hit_lines || []).includes(i)) }\n    //   idx={i} slot={s} \n    //   handle={this.props.handle}\n    // />\n    // </Grid>\n\n    return (\n      <Grid container className=\"bingo_card\" xs={12}>\n        {card_tiles}\n      </Grid>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Typography } from '@material-ui/core';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDog } from '@fortawesome/free-solid-svg-icons'\nimport { DialogTitle, DialogContent } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport { Dialog } from '@material-ui/core';\n\n\nexport default class Dialogue extends Component {\n    constructor(props) {\n        super(props)\n    }\n    render() {\n        return (\n            <Dialog onClose={this.props.handleClose} aria-labelledby=\"customized-dialog-title\" open={this.props.showState}>\n                <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n                <FontAwesomeIcon icon={faDog} />\n                </DialogTitle>\n                <DialogContent dividers>\n                    <Typography variant=\"h2\" style={{ fontWeight: '600', textAlign: 'center' }} gutterBottom>\n                        BINGO!\n                    </Typography>\n                    <Typography gutterBottom>\n                        You have found all the dog squares!\n                    </Typography>\n                </DialogContent>\n                <Button \n                    variant=\"contained\" \n                    color=\"primary\" \n                    onClick={this.props.handleClose}>\n                        Ruff!\n                </Button>\n            </Dialog>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { dogBingoOptions } from './constants/dogBingoOptions'\nimport Card from './components/Card'\n// import './App.css'\nimport { styled } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport Dialogue from './components/Dialogue';\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\n\n// SET TO MAX OF 9 or add more options\nexport let dimension = 5;\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#07B0F2',\n    },\n    alert: {\n      main: '#038C4C'\n    }\n  },\n});\n\n\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pick: new Array(dimension * dimension).fill(0),\n      slots: [],\n      rows: [],\n      column: [],\n      options: dogBingoOptions,\n      hits: [],\n      prevCompleted: [],\n      showState: false\n    }\n    this.handleClick = this.handleClick.bind(this)\n    this.handleClear = this.handleClear.bind(this)\n    this.handleGenerateRandom = this.handleGenerateRandom.bind(this)\n  }\n\n  handleClick(event) {\n    event.target.classList.add(\"mark-found\")\n    if (event.target.lastChild.id !== undefined && !this.state.hits.includes(event.target.lastChild.id))\n      this.setState({\n        hits: [...this.state.hits, event.target.lastChild.id]\n      }, function () { this.checkLine(event.target.lastChild.id) })\n\n      document.getElementById(\"completed-line\").style.opacity = 0;\n  }\n  handleClear = () => {\n    const textConts = document.querySelectorAll('span.text-content')\n    for (let i = 0; i < textConts.length; i++) {\n      textConts[i].innerHTML = \"\"\n    }\n    //Remove marked from squares\n    this.setState({\n      hits: [],\n      prevCompleted: []\n    })\n    this.removeMarked()\n    document.getElementById(\"completed-line\").style.opacity = 0;\n  }\n\n  removeMarked = () => {\n    const squares = document.getElementsByClassName('square')\n    for (let i = 0; i < squares.length; i++) {\n      squares[i].classList.remove('mark-found', 'mark-line-complete')\n    }\n  }\n\n  handleGenerateRandom = () => {\n    document.getElementById(\"completed-line\").style.opacity = 0;\n    const randCards = this.generateCards(dimension * dimension)\n    console.log(randCards)\n    this.setState({\n      slots: randCards,\n      hits: [],\n      prevCompleted: []\n    }, function () { this.fillSquares() })\n    this.removeMarked()\n  }\n\n  fillSquares() {\n    const textConts = document.querySelectorAll('span.text-content')\n    for (let i = 0; i < textConts.length; i++) {\n      textConts[i].setAttribute(\"id\", i)\n      textConts[i].innerHTML = this.state.slots[i]\n    }\n  }\n\n  handleGo() {\n    const hit_pool = this.state.hit_pool;\n    const hits = hit_pool.slice(0, this.state.hit_step + 1);\n    this.setState({\n      hits: hits,\n      hit_step: this.state.hit_step + 1\n    });\n  }\n\n  handleClear() {\n    this.setState({\n      pick: new Array(dimension * dimension).fill(0),\n      slots: [],\n      result: [],\n      nxtNum: 1,\n      hits: null,\n      hit_pool: this.generateNums(dimension * dimension),\n      hit_step: 0\n    });\n  }\n\n  handleClose = () => {\n    this.setState({\n      showState: false\n    })\n  };\n\n  handleAdd() {\n    const pick = this.state.pick;\n    let slots = this.state.slots;\n    slots.push(pick)\n    this.setState({\n      slots: slots,\n      pick: new Array(dimension * dimension).fill(0),\n      nxtNum: 1,\n    });\n  }\n\n  checkLine(clickedEl) {\n    const lines = [\n      //       [0,1,2,3,4],\n      //       [5,6,7,8,9],\n      //       [10,11,12,13,14],\n      //       [15,16,17,18,19],\n      //       [20,21,22,23,24],\n\n      //       [0,5,10,15,20],\n      //       [1,6,11,16,21],\n      //       [2,7,12,17,22],\n      //       [3,8,13,18,23],\n      //       [4,9,14,19,24],\n\n      // [0,6,12,18,24],\n      // [4,8,12,16,20]\n    ];\n\n    let slash1 = [];\n    let slash2 = [];\n\n    for (let i = 0; i < dimension; i++) {\n      let row = [];\n      let col = [];\n      for (var o = 0; o < dimension; o++) {\n        row.push(o + dimension * i);\n        col.push(o * dimension + i);\n      }\n      lines.push(row);\n      lines.push(col);\n\n      slash1.push(i + dimension * i);\n      slash2.push((dimension - 1) * (i + 1));\n    }\n    lines.push(slash1);\n    lines.push(slash2);\n\n    console.log(\"LINES\", lines)\n\n    const hits = this.state.hits.map(hit => parseInt(hit));\n\n    for (let i = 0; i < lines.length; i++) {\n      //If the hits includes every member of a line\n      //and the prev completed array has not been completed before\n      if (lines[i].every(c => hits.includes(c)) &&\n        !this.state.prevCompleted.includes(i) &&\n        this.state.slots.length !== 0) {\n        // alert(`LINE ${i} COMPLETE!`)\n        this.indicateCompletedLine(lines[i])\n        this.setState({\n          prevCompleted: [...this.state.prevCompleted, i]\n        })\n      }\n    }\n    this.checkWholeSquare()\n  }\n\n  indicateCompletedLine = (compLine) => {\n    console.log(\"LINE COMPLETE\", compLine)\n    compLine.forEach(id => {\n      console.log(\"ID OF COMPLETED\", id)\n      let targElement = document.getElementById(`${id}`).parentElement\n      console.log(\"TARGETED FINISHED ELEMENT\", targElement)\n\n      targElement.classList.add('mark-line-complete')\n    })\n    document.getElementById(\"completed-line\").style.opacity = 1;\n\n    //Check if all squares have been checked\n\n  }\n\n  checkWholeSquare = () => {\n    if (this.state.hits.length >= this.state.slots.length && this.state.slots.length !== 0) {\n      //Replace with modal\n      this.setState({\n        showState: true\n      })\n    }\n  }\n\n  generateCards = (max) => {\n    //Create pool of spaces\n    const pool = Array.apply(null, Array(max + 1)).map(function (_, i) { return i; });\n    let arr = [];\n    while (arr.length < max) {\n      const idx = Math.floor(Math.random() * dogBingoOptions.length)\n      const dogEl = dogBingoOptions[idx]\n      console.log(idx)\n      if (pool[idx] != 0) {\n        arr.push(dogEl);\n        pool[idx] = 0;\n      }\n    }\n    return arr;\n  }\n\n  render() {\n\n    const alert = document.getElementById('completed-line')\n    console.log(alert)\n\n    return (\n      <div className=\"container\">\n        <h1>Bingo</h1>\n        <div className=\"button-container\">\n          <div className=\"container-inner\">\n            <ThemeProvider theme={theme}>\n              <Button variant=\"contained\" color=\"primary\"\n                onClick={this.handleClear}>Clear</Button>\n              <Button variant=\"contained\" color=\"primary\" onClick={this.handleGenerateRandom}>New Card</Button>\n            </ThemeProvider>\n          </div>\n        </div>\n        <Alert id=\"completed-line\" variant=\"filled\" severity=\"success\">\n          Line Complete!\n        </Alert>\n        <div className=\"Game__bingo_card\">\n          <Card\n            hits={this.state.hits}\n            slots={this.state.slots}\n            dimension={dimension}\n            handle={this.handleClick}\n          />\n        </div>\n        <ThemeProvider theme={theme}>\n          <Dialogue\n            handleClose={this.handleClose}\n            showState={this.state.showState}\n          >\n          </Dialogue>\n        </ThemeProvider>\n\n      </div>\n    )\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}