{"ast":null,"code":"var _jsxFileName = \"/Users/nilsvanderwerf/Development/code/coding-exercises/dog-park-bingo/src/App.js\";\nimport React, { Component } from 'react';\nimport { dogBingoOptions } from './constants/dogBingoOptions';\nimport Card from './components/Card'; // import './App.css'\n\nimport { styled } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport { Modal } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles'; // SET TO MAX OF 9 or add more options\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport let dimension = 5;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: 300,\n    flexGrow: 1,\n    minWidth: 300,\n    transform: 'translateZ(0)',\n    // The position fixed scoping doesn't work in IE 11.\n    // Disable this demo to preserve the others.\n    '@media all and (-ms-high-contrast: none)': {\n      display: 'none'\n    }\n  },\n  modal: {\n    display: 'flex',\n    padding: theme.spacing(1),\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n}));\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClear = () => {\n      const textConts = document.querySelectorAll('span.text-content');\n\n      for (let i = 0; i < textConts.length; i++) {\n        textConts[i].innerHTML = \"\";\n      } //Remove marked from squares\n\n\n      this.setState({\n        hits: []\n      });\n      this.removeMarked();\n    };\n\n    this.removeMarked = () => {\n      const squares = document.getElementsByClassName('square');\n\n      for (let i = 0; i < squares.length; i++) {\n        squares[i].classList.remove('mark-found', 'mark-line-complete');\n      }\n    };\n\n    this.handleGenerateRandom = () => {\n      console.log(this.state.options);\n      const randCards = this.generateCards(dimension * dimension);\n      console.log(randCards);\n      this.setState({\n        slots: randCards,\n        hits: []\n      }, function () {\n        this.fillSquares();\n      });\n      this.removeMarked();\n    };\n\n    this.indicateCompletedLine = compLine => {\n      console.log(\"LINE COMPLETE\", compLine);\n      compLine.forEach(id => {\n        console.log(\"ID OF COMPLETED\", id);\n        let targElement = document.getElementById(`${id}`).parentElement;\n        console.log(\"TARGETED FINISHED ELEMENT\", targElement);\n        targElement.classList.add('mark-line-complete');\n      }); //Check if all squares have been checked\n    };\n\n    this.checkWholeSquare = () => {\n      if (this.state.hits.length >= this.state.slots.length) {\n        //Replace with modal\n\n        /*#__PURE__*/\n        _jsxDEV(Modal, {\n          \"aria-labelledby\": \"simple-modal-title\",\n          \"aria-describedby\": \"simple-modal-description\",\n          children: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"\\\"BINGO\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 5\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 7\n        }, this);\n      }\n    };\n\n    this.generateCards = max => {\n      //Create pool of spaces\n      const pool = Array.apply(null, Array(max + 1)).map(function (_, i) {\n        return i;\n      });\n      let arr = [];\n\n      while (arr.length < max) {\n        const idx = Math.floor(Math.random() * dogBingoOptions.length);\n        const dogEl = dogBingoOptions[idx];\n        console.log(idx);\n\n        if (pool[idx] != 0) {\n          arr.push(dogEl);\n          pool[idx] = 0;\n        }\n      }\n\n      return arr;\n    };\n\n    this.state = {\n      pick: new Array(dimension * dimension).fill(0),\n      slots: [],\n      rows: [],\n      column: [],\n      options: dogBingoOptions,\n      hits: [],\n      prevCompleted: [],\n      showState: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleGenerateRandom = this.handleGenerateRandom.bind(this);\n  }\n\n  handleClick(event) {\n    event.target.classList.add(\"mark-found\");\n    if (event.target.lastChild.id !== undefined && !this.state.hits.includes(event.target.lastChild.id)) this.setState({\n      hits: [...this.state.hits, event.target.lastChild.id]\n    }, function () {\n      this.checkLine(event.target.lastChild.id);\n    });\n  }\n\n  fillSquares() {\n    const textConts = document.querySelectorAll('span.text-content');\n\n    for (let i = 0; i < textConts.length; i++) {\n      textConts[i].setAttribute(\"id\", i);\n      textConts[i].innerHTML = this.state.slots[i];\n    }\n  }\n\n  handleGo() {\n    const hit_pool = this.state.hit_pool;\n    const hits = hit_pool.slice(0, this.state.hit_step + 1);\n    this.setState({\n      hits: hits,\n      hit_step: this.state.hit_step + 1\n    });\n  }\n\n  handleClear() {\n    this.setState({\n      pick: new Array(dimension * dimension).fill(0),\n      slots: [],\n      result: [],\n      nxtNum: 1,\n      hits: null,\n      hit_pool: this.generateNums(dimension * dimension),\n      hit_step: 0\n    });\n  }\n\n  handleAdd() {\n    const pick = this.state.pick;\n    let slots = this.state.slots;\n    slots.push(pick);\n    this.setState({\n      slots: slots,\n      pick: new Array(dimension * dimension).fill(0),\n      nxtNum: 1\n    });\n  }\n\n  checkLine(clickedEl) {\n    const lines = [//       [0,1,2,3,4],\n      //       [5,6,7,8,9],\n      //       [10,11,12,13,14],\n      //       [15,16,17,18,19],\n      //       [20,21,22,23,24],\n      //       [0,5,10,15,20],\n      //       [1,6,11,16,21],\n      //       [2,7,12,17,22],\n      //       [3,8,13,18,23],\n      //       [4,9,14,19,24],\n      // [0,6,12,18,24],\n      // [4,8,12,16,20]\n    ];\n    let slash1 = [];\n    let slash2 = [];\n\n    for (let i = 0; i < dimension; i++) {\n      let row = [];\n      let col = [];\n\n      for (var o = 0; o < dimension; o++) {\n        row.push(o + dimension * i);\n        col.push(o * dimension + i);\n      }\n\n      lines.push(row);\n      lines.push(col);\n      slash1.push(i + dimension * i);\n      slash2.push((dimension - 1) * (i + 1));\n    }\n\n    lines.push(slash1);\n    lines.push(slash2);\n    const hits = this.state.hits.map(hit => parseInt(hit));\n\n    for (let i = 0; i < lines.length; i++) {\n      //If the hits includes every member of a line\n      //and the prev completed array has not been completed before\n      if (lines[i].every(c => hits.includes(c)) && !this.state.prevCompleted.includes(i) && this.state.prevCompleted.length < 12) {\n        // alert(`LINE ${i} COMPLETE!`)\n        this.indicateCompletedLine(lines[i]);\n        this.setState({\n          prevCompleted: [...this.state.prevCompleted, i]\n        });\n      } else if (this.state.prevCompleted.length === 12) {\n        alert(`~~~ ALL LINES COMPLETE! YOU WIN! ~~~`);\n      }\n    }\n\n    this.checkWholeSquare();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Bingo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-inner\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: this.handleClear,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: this.handleGenerateRandom,\n            children: \"New Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Game__bingo_card\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          hits: this.state.hits,\n          slots: this.state.slots,\n          dimension: dimension,\n          handle: this.handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/nilsvanderwerf/Development/code/coding-exercises/dog-park-bingo/src/App.js"],"names":["React","Component","dogBingoOptions","Card","styled","Button","Modal","makeStyles","dimension","useStyles","theme","root","height","flexGrow","minWidth","transform","display","modal","padding","spacing","alignItems","justifyContent","App","constructor","props","handleClear","textConts","document","querySelectorAll","i","length","innerHTML","setState","hits","removeMarked","squares","getElementsByClassName","classList","remove","handleGenerateRandom","console","log","state","options","randCards","generateCards","slots","fillSquares","indicateCompletedLine","compLine","forEach","id","targElement","getElementById","parentElement","add","checkWholeSquare","max","pool","Array","apply","map","_","arr","idx","Math","floor","random","dogEl","push","pick","fill","rows","column","prevCompleted","showState","handleClick","bind","event","target","lastChild","undefined","includes","checkLine","setAttribute","handleGo","hit_pool","slice","hit_step","result","nxtNum","generateNums","handleAdd","clickedEl","lines","slash1","slash2","row","col","o","hit","parseInt","every","c","alert","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { dogBingoOptions } from './constants/dogBingoOptions'\nimport Card from './components/Card'\n// import './App.css'\nimport { styled } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport { Modal } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n// SET TO MAX OF 9 or add more options\nexport let dimension = 5;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 300,\n    flexGrow: 1,\n    minWidth: 300,\n    transform: 'translateZ(0)',\n    // The position fixed scoping doesn't work in IE 11.\n    // Disable this demo to preserve the others.\n    '@media all and (-ms-high-contrast: none)': {\n      display: 'none',\n    },\n  },\n  modal: {\n    display: 'flex',\n    padding: theme.spacing(1),\n    alignItems: 'center',\n    justifyContent: 'center',\n  }\n})); \n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pick: new Array(dimension * dimension).fill(0),\n      slots: [],\n      rows: [],\n      column: [],\n      options: dogBingoOptions,\n      hits: [],\n      prevCompleted: [],\n      showState: false\n    }\n    this.handleClick = this.handleClick.bind(this)\n    this.handleClear = this.handleClear.bind(this)\n    this.handleGenerateRandom = this.handleGenerateRandom.bind(this)\n  }\n\n  handleClick(event) {\n    event.target.classList.add(\"mark-found\")\n    if (event.target.lastChild.id !== undefined && !this.state.hits.includes(event.target.lastChild.id))\n    this.setState({\n      hits: [...this.state.hits, event.target.lastChild.id]\n    }, function () { this.checkLine(event.target.lastChild.id) })\n\n  }\n  handleClear = () => {\n    const textConts = document.querySelectorAll('span.text-content')\n    for (let i = 0; i < textConts.length; i++) {\n      textConts[i].innerHTML = \"\"\n    }\n    //Remove marked from squares\n    this.setState({\n      hits: []\n    })\n    this.removeMarked()\n  }\n\n  removeMarked = () => {\n    const squares = document.getElementsByClassName('square')\n    for (let i = 0; i < squares.length; i++) {\n      squares[i].classList.remove('mark-found', 'mark-line-complete')\n    }\n  }\n\n  handleGenerateRandom = () => {\n    console.log(this.state.options)\n    const randCards = this.generateCards(dimension * dimension)\n    console.log(randCards)\n    this.setState({\n      slots: randCards,\n      hits: []\n    }, function () { this.fillSquares() })\n    this.removeMarked()\n  }\n\n  fillSquares() {\n    const textConts = document.querySelectorAll('span.text-content')\n    for (let i = 0; i < textConts.length; i++) {\n      textConts[i].setAttribute(\"id\", i)\n      textConts[i].innerHTML = this.state.slots[i]\n    }\n  }\n\n  handleGo() {\n    const hit_pool = this.state.hit_pool;\n    const hits = hit_pool.slice(0, this.state.hit_step + 1);\n    this.setState({\n      hits: hits,\n      hit_step: this.state.hit_step + 1\n    });\n  }\n\n  handleClear() {\n    this.setState({\n      pick: new Array(dimension * dimension).fill(0),\n      slots: [],\n      result: [],\n      nxtNum: 1,\n      hits: null,\n      hit_pool: this.generateNums(dimension * dimension),\n      hit_step: 0\n    });\n  }\n\n  handleAdd() {\n    const pick = this.state.pick;\n    let slots = this.state.slots;\n    slots.push(pick)\n    this.setState({\n      slots: slots,\n      pick: new Array(dimension * dimension).fill(0),\n      nxtNum: 1,\n    });\n  }\n\n  checkLine(clickedEl) {\n    const lines = [\n      //       [0,1,2,3,4],\n      //       [5,6,7,8,9],\n      //       [10,11,12,13,14],\n      //       [15,16,17,18,19],\n      //       [20,21,22,23,24],\n\n      //       [0,5,10,15,20],\n      //       [1,6,11,16,21],\n      //       [2,7,12,17,22],\n      //       [3,8,13,18,23],\n      //       [4,9,14,19,24],\n\n      // [0,6,12,18,24],\n      // [4,8,12,16,20]\n    ];\n\n    let slash1 = [];\n    let slash2 = [];\n\n    for (let i = 0; i < dimension; i++) {\n      let row = [];\n      let col = [];\n      for (var o = 0; o < dimension; o++) {\n        row.push(o + dimension * i);\n        col.push(o * dimension + i);\n      }\n      lines.push(row);\n      lines.push(col);\n\n      slash1.push(i + dimension * i);\n      slash2.push((dimension - 1) * (i + 1));\n    }\n    lines.push(slash1);\n    lines.push(slash2);\n\n    const hits = this.state.hits.map(hit => parseInt(hit));\n\n    for (let i = 0; i < lines.length; i++) {\n      //If the hits includes every member of a line\n      //and the prev completed array has not been completed before\n      if (lines[i].every(c => hits.includes(c)) &&\n        !this.state.prevCompleted.includes(i) &&\n        this.state.prevCompleted.length < 12) {\n        // alert(`LINE ${i} COMPLETE!`)\n        this.indicateCompletedLine(lines[i])\n        this.setState({\n          prevCompleted: [...this.state.prevCompleted, i]\n        })\n      }\n      else if (this.state.prevCompleted.length === 12) {\n        alert(`~~~ ALL LINES COMPLETE! YOU WIN! ~~~`)\n      }\n    }\n    this.checkWholeSquare()\n  }\n\n  indicateCompletedLine = (compLine) => {\n    console.log(\"LINE COMPLETE\", compLine)\n      compLine.forEach(id => {\n        console.log(\"ID OF COMPLETED\", id)\n        let targElement = document.getElementById(`${id}`).parentElement\n        console.log(\"TARGETED FINISHED ELEMENT\", targElement)\n        targElement.classList.add('mark-line-complete')\n      })\n      //Check if all squares have been checked\n      \n  }\n\n  checkWholeSquare = () => {\n    if (this.state.hits.length >= this.state.slots.length) {\n      //Replace with modal\n      <Modal\n  aria-labelledby=\"simple-modal-title\"\n  aria-describedby=\"simple-modal-description\"\n>\n  <><h1>\"BINGO\"</h1></>\n</Modal>\n    }\n  }\n\n\n  generateCards = (max) => {\n    //Create pool of spaces\n    const pool = Array.apply(null, Array(max + 1)).map(function (_, i) { return i; });\n    let arr = [];\n    while (arr.length < max) {\n      const idx = Math.floor(Math.random() * dogBingoOptions.length)\n      const dogEl = dogBingoOptions[idx]\n      console.log(idx)\n      if (pool[idx] != 0) {\n        arr.push(dogEl);\n        pool[idx] = 0;\n      }\n    }\n    return arr;\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Bingo</h1>\n        <div className=\"button-container\">\n          <div className=\"container-inner\">\n          <Button variant=\"contained\" color=\"primary\" onClick={this.handleClear}>Clear</Button>\n          <Button variant=\"contained\" color=\"primary\" onClick={this.handleGenerateRandom}>New Card</Button>\n          </div>\n        </div>\n        <div className=\"Game__bingo_card\">\n          <Card\n            hits={this.state.hits}\n            slots={this.state.slots}\n            dimension={dimension}\n            handle={this.handleClick}\n          />\n        </div>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}