{"ast":null,"code":"var _jsxFileName = \"/Users/nilsvanderwerf/Development/code/coding-exercises/dog-park-bingo/src/components/Card.js\";\nimport React, { Component } from 'react';\nimport BingoRow from './BingoRow';\nimport BingoItem from './BingoItem';\nimport { Grid } from '@material-ui/core';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Card extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createRows = () => {\n      const {\n        slots,\n        dimension\n      } = this.props;\n      console.log(\"SLOTS\", slots);\n      let bingoRows = [];\n\n      for (let i = 0; i < dimension; i++) {\n        bingoRows.push(slots.slice(dimension * i, dimension * i + (dimension - 1)));\n      }\n\n      this.setState({\n        rows: bingoRows\n      });\n    };\n\n    this.state = {\n      rows: []\n    };\n    this.createRows = this.createRows.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      rows: []\n    });\n  }\n\n  render() {\n    const card_rows = this.createRows();\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      className: \"group\",\n      children: this.state.rows.map(row => {\n        /*#__PURE__*/\n        _jsxDEV(BingoRow, {\n          row: row\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 19\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/nilsvanderwerf/Development/code/coding-exercises/dog-park-bingo/src/components/Card.js"],"names":["React","Component","BingoRow","BingoItem","Grid","Card","constructor","props","createRows","slots","dimension","console","log","bingoRows","i","push","slice","setState","rows","state","bind","componentDidMount","render","card_rows","map","row"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA,OAAO,YAAP;;AAEA,eAAe,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AACxCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAgBnBC,UAhBmB,GAgBN,MAAM;AACjB,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAuB,KAAKH,KAAlC;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,KAArB;AACA,UAAII,SAAS,GAAG,EAAhB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,SAApB,EAA+BI,CAAC,EAAhC,EAAoC;AAClCD,QAAAA,SAAS,CAACE,IAAV,CACEN,KAAK,CAACO,KAAN,CAAYN,SAAS,GAAGI,CAAxB,EAA4BJ,SAAS,GAAGI,CAAZ,IAAiBJ,SAAS,GAAG,CAA7B,CAA5B,CADF;AAGD;;AACC,WAAKO,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAEL;AADM,OAAd;AAGH,KA5BkB;;AAEf,SAAKM,KAAL,GAAa;AACTD,MAAAA,IAAI,EAAE;AADG,KAAb;AAIA,SAAKV,UAAL,GAAkB,KAAKA,UAAL,CAAgBY,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,QAAL,CAAc;AACZC,MAAAA,IAAI,EAAE;AADM,KAAd;AAID;;AAkBDI,EAAAA,MAAM,GAAG;AAEP,UAAMC,SAAS,GAAG,KAAKf,UAAL,EAAlB;AAEE,wBACI,QAAC,IAAD;AACI,MAAA,SAAS,MADb;AAEI,MAAA,SAAS,EAAC,KAFd;AAGI,MAAA,cAAc,EAAC,QAHnB;AAII,MAAA,UAAU,EAAC,QAJf;AAKI,MAAA,SAAS,EAAC,OALd;AAAA,gBAOK,KAAKW,KAAL,CAAWD,IAAX,CAAgBM,GAAhB,CAAoBC,GAAG,IAAI;AAC1B;AAAA,gBAAC,QAAD;AAAU,UAAA,GAAG,EAAIA;AAAjB;AAAA;AAAA;AAAA;AAAA;AACD,OAFA;AAPL;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AAlDuC","sourcesContent":["import React, { Component } from 'react'\nimport BingoRow from './BingoRow';\nimport BingoItem from './BingoItem'\nimport { Grid } from '@material-ui/core';\n\nimport '../App.css'\n\nexport default class Card extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            rows: []\n        }\n\n        this.createRows = this.createRows.bind(this)\n    }\n\n    componentDidMount() {\n      this.setState({\n        rows: []\n      })\n      \n    }\n\n    createRows = () => {\n      const { slots, dimension } = this.props\n      console.log(\"SLOTS\", slots)\n      let bingoRows = [];\n      for (let i = 0; i < dimension; i++) {\n        bingoRows.push(\n          slots.slice(dimension * i, (dimension * i + (dimension - 1)) )\n        )\n      }\n        this.setState({\n          rows: bingoRows\n        }) \n    }\n\n\n      \n    render() {\n\n      const card_rows = this.createRows()\n\n        return (\n            <Grid\n                container\n                direction=\"row\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                className=\"group\"\n            >\n                {this.state.rows.map(row => {\n                  <BingoRow row = {row}/>\n                })}\n            </Grid>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}