{"ast":null,"code":"var _jsxFileName = \"/Users/nilsvanderwerf/Development/code/coding-exercises/dog-park-bingo/src/App.js\";\nimport React, { Component } from 'react';\nimport { dogBingoOptions } from './constants/dogBingoOptions';\nimport Card from './components/Card'; // import './App.css'\n\nimport { styled } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet dimension = 5;\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClear = () => {\n      const textConts = document.querySelectorAll('span.text-content');\n\n      for (let i = 0; i < textConts.length; i++) {\n        textConts[i].innerHTML = \"\";\n      } //Remove marked from squares\n\n\n      this.removeMarked();\n    };\n\n    this.removeMarked = () => {\n      const squares = document.getElementsByClassName('square');\n\n      for (let i = 0; i < squares.length; i++) {\n        squares[i].classList.remove('mark-found');\n      }\n    };\n\n    this.handleGenerateRandom = () => {\n      console.log(this.state.options);\n      const randCards = this.generateCards(dimension * dimension);\n      console.log(randCards);\n      this.setState({\n        slots: randCards\n      }, function () {\n        this.fillSquares();\n      });\n      this.removeMarked();\n    };\n\n    this.indicateCompletedLine = compLine => {\n      for (let i = 0; i < compLine.length; i++) {\n        let targElement = document.getElementById(`${i}`).parentElement;\n        console.log(\"TARGETED FINISHED ELEMENT\", targElement);\n        targElement.classList.add('mark-line-complete');\n      }\n    };\n\n    this.generateCards = max => {\n      //Create pool of spaces\n      const pool = Array.apply(null, Array(max + 1)).map(function (_, i) {\n        return i;\n      });\n      let arr = [];\n\n      while (arr.length < max) {\n        const idx = Math.floor(Math.random() * dogBingoOptions.length);\n        const dogEl = dogBingoOptions[idx];\n        console.log(idx);\n\n        if (pool[idx] != 0) {\n          arr.push(dogEl);\n          pool[idx] = 0;\n        }\n      }\n\n      return arr;\n    };\n\n    this.state = {\n      pick: new Array(dimension * dimension).fill(0),\n      slots: [],\n      rows: [],\n      column: [],\n      options: dogBingoOptions,\n      hits: [],\n      prevCompleted: []\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleGenerateRandom = this.handleGenerateRandom.bind(this);\n  }\n\n  handleClick(event) {\n    event.target.classList.add(\"mark-found\");\n    console.log(\"TARGET CHILDREN\", event.target.lastChild.id);\n    this.setState({\n      hits: [...this.state.hits, event.target.lastChild.id]\n    }, function () {\n      this.checkLine(event.target.lastChild.id);\n    });\n  }\n\n  fillSquares() {\n    const textConts = document.querySelectorAll('span.text-content');\n\n    for (let i = 0; i < textConts.length; i++) {\n      textConts[i].setAttribute(\"id\", i);\n      textConts[i].innerHTML = this.state.slots[i];\n    }\n  }\n\n  handleGo() {\n    const hit_pool = this.state.hit_pool;\n    const hits = hit_pool.slice(0, this.state.hit_step + 1);\n    this.setState({\n      hits: hits,\n      hit_step: this.state.hit_step + 1\n    });\n  }\n\n  handleClear() {\n    this.setState({\n      pick: new Array(dimension * dimension).fill(0),\n      slots: [],\n      result: [],\n      nxtNum: 1,\n      hits: null,\n      hit_pool: this.generateNums(dimension * dimension),\n      hit_step: 0\n    });\n  }\n\n  handleAdd() {\n    const pick = this.state.pick;\n    let slots = this.state.slots;\n    slots.push(pick);\n    this.setState({\n      slots: slots,\n      pick: new Array(dimension * dimension).fill(0),\n      nxtNum: 1\n    });\n  }\n\n  checkLine(clickedEl) {\n    console.log(\"CLICKED EL\", clickedEl);\n    const lines = [//       [0,1,2,3,4],\n      //       [5,6,7,8,9],\n      //       [10,11,12,13,14],\n      //       [15,16,17,18,19],\n      //       [20,21,22,23,24],\n      //       [0,5,10,15,20],\n      //       [1,6,11,16,21],\n      //       [2,7,12,17,22],\n      //       [3,8,13,18,23],\n      //       [4,9,14,19,24],\n      // [0,6,12,18,24],\n      // [4,8,12,16,20]\n    ];\n    let slash1 = [];\n    let slash2 = [];\n\n    for (let i = 0; i < dimension; i++) {\n      let row = [];\n      let col = [];\n\n      for (var o = 0; o < dimension; o++) {\n        row.push(o + dimension * i);\n        col.push(o * dimension + i);\n      }\n\n      lines.push(row);\n      lines.push(col);\n      slash1.push(i + dimension * i);\n      slash2.push((dimension - 1) * (i + 1));\n    }\n\n    lines.push(slash1);\n    lines.push(slash2);\n    const hits = this.state.hits.map(hit => parseInt(hit));\n    console.log(\"PARSE INT HITS\", hits);\n    console.log(hits, lines);\n\n    for (let i = 0; i < lines.length; i++) {\n      //If the hits includes every member of a line\n      //and the prev completed array has not been completed before\n      if (lines[i].every(c => hits.includes(c)) && !this.state.prevCompleted.includes(i) && this.state.prevCompleted.length < 12) {\n        // alert(`LINE ${i} COMPLETE!`)\n        this.indicateCompletedLine(lines[i]);\n        this.setState({\n          prevCompleted: [...this.state.prevCompleted, i]\n        });\n      } else if (this.state.prevCompleted.length === 12) {\n        alert(`~~~ ALL LINES COMPLETE! YOU WIN! ~~~`);\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Bingo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: this.handleClear,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: this.handleGenerateRandom,\n          children: \"New Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Game__bingo_card\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          hits: this.state.hits,\n          slots: this.state.slots,\n          dimension: dimension,\n          handle: this.handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/nilsvanderwerf/Development/code/coding-exercises/dog-park-bingo/src/App.js"],"names":["React","Component","dogBingoOptions","Card","styled","Button","dimension","App","constructor","props","handleClear","textConts","document","querySelectorAll","i","length","innerHTML","removeMarked","squares","getElementsByClassName","classList","remove","handleGenerateRandom","console","log","state","options","randCards","generateCards","setState","slots","fillSquares","indicateCompletedLine","compLine","targElement","getElementById","parentElement","add","max","pool","Array","apply","map","_","arr","idx","Math","floor","random","dogEl","push","pick","fill","rows","column","hits","prevCompleted","handleClick","bind","event","target","lastChild","id","checkLine","setAttribute","handleGo","hit_pool","slice","hit_step","result","nxtNum","generateNums","handleAdd","clickedEl","lines","slash1","slash2","row","col","o","hit","parseInt","every","c","includes","alert","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { dogBingoOptions } from './constants/dogBingoOptions'\nimport Card from './components/Card'\n// import './App.css'\nimport { styled } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\n\nlet dimension = 5;\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pick: new Array(dimension * dimension).fill(0),\n      slots: [],\n      rows: [],\n      column: [],\n      options: dogBingoOptions,\n      hits: [],\n      prevCompleted: []\n    }\n    this.handleClick = this.handleClick.bind(this)\n    this.handleClear = this.handleClear.bind(this)\n    this.handleGenerateRandom = this.handleGenerateRandom.bind(this)\n  }\n\n  handleClick(event) {\n    event.target.classList.add(\"mark-found\")\n    console.log(\"TARGET CHILDREN\", event.target.lastChild.id)\n    this.setState({\n      hits: [...this.state.hits, event.target.lastChild.id]\n    }, function () { this.checkLine(event.target.lastChild.id) })\n\n  }\n  handleClear = () => {\n    const textConts = document.querySelectorAll('span.text-content')\n    for (let i = 0; i < textConts.length; i++) {\n      textConts[i].innerHTML = \"\"\n    }\n    //Remove marked from squares\n    this.removeMarked()\n  }\n\n  removeMarked = () => {\n    const squares = document.getElementsByClassName('square')\n    for (let i = 0; i < squares.length; i++) {\n      squares[i].classList.remove('mark-found')\n    }\n  }\n\n  handleGenerateRandom = () => {\n    console.log(this.state.options)\n    const randCards = this.generateCards(dimension * dimension)\n    console.log(randCards)\n    this.setState({\n      slots: randCards,\n    }, function () { this.fillSquares() })\n    this.removeMarked()\n  }\n\n  fillSquares() {\n    const textConts = document.querySelectorAll('span.text-content')\n    for (let i = 0; i < textConts.length; i++) {\n      textConts[i].setAttribute(\"id\", i)\n      textConts[i].innerHTML = this.state.slots[i]\n    }\n  }\n\n  handleGo() {\n    const hit_pool = this.state.hit_pool;\n    const hits = hit_pool.slice(0, this.state.hit_step + 1);\n    this.setState({\n      hits: hits,\n      hit_step: this.state.hit_step + 1\n    });\n  }\n\n  handleClear() {\n    this.setState({\n      pick: new Array(dimension * dimension).fill(0),\n      slots: [],\n      result: [],\n      nxtNum: 1,\n      hits: null,\n      hit_pool: this.generateNums(dimension * dimension),\n      hit_step: 0\n    });\n  }\n\n  handleAdd() {\n    const pick = this.state.pick;\n    let slots = this.state.slots;\n    slots.push(pick)\n    this.setState({\n      slots: slots,\n      pick: new Array(dimension * dimension).fill(0),\n      nxtNum: 1,\n    });\n  }\n\n  checkLine(clickedEl) {\n    console.log(\"CLICKED EL\", clickedEl)\n    const lines = [\n      //       [0,1,2,3,4],\n      //       [5,6,7,8,9],\n      //       [10,11,12,13,14],\n      //       [15,16,17,18,19],\n      //       [20,21,22,23,24],\n\n      //       [0,5,10,15,20],\n      //       [1,6,11,16,21],\n      //       [2,7,12,17,22],\n      //       [3,8,13,18,23],\n      //       [4,9,14,19,24],\n\n      // [0,6,12,18,24],\n      // [4,8,12,16,20]\n    ];\n\n    let slash1 = [];\n    let slash2 = [];\n\n    for (let i = 0; i < dimension; i++) {\n      let row = [];\n      let col = [];\n      for (var o = 0; o < dimension; o++) {\n        row.push(o + dimension * i);\n        col.push(o * dimension + i);\n      }\n      lines.push(row);\n      lines.push(col);\n\n      slash1.push(i + dimension * i);\n      slash2.push((dimension - 1) * (i + 1));\n    }\n    lines.push(slash1);\n    lines.push(slash2);\n\n    const hits = this.state.hits.map(hit => parseInt(hit));\n\n    console.log(\"PARSE INT HITS\", hits)\n\n    console.log(hits, lines)\n\n    for (let i = 0; i < lines.length; i++) {\n      //If the hits includes every member of a line\n      //and the prev completed array has not been completed before\n      if (lines[i].every(c => hits.includes(c)) &&\n        !this.state.prevCompleted.includes(i) &&\n        this.state.prevCompleted.length < 12) {\n        // alert(`LINE ${i} COMPLETE!`)\n        this.indicateCompletedLine(lines[i])\n        this.setState({\n          prevCompleted: [...this.state.prevCompleted, i]\n        })\n      }\n      else if (this.state.prevCompleted.length === 12) {\n        alert(`~~~ ALL LINES COMPLETE! YOU WIN! ~~~`)\n      }\n    }\n  }\n\n  indicateCompletedLine = (compLine) => {\n    for (let i=0; i < compLine.length; i++) {\n      let targElement = document.getElementById(`${i}`).parentElement\n      console.log(\"TARGETED FINISHED ELEMENT\", targElement)\n      targElement.classList.add('mark-line-complete')\n    }\n  }\n\n  generateCards = (max) => {\n    //Create pool of spaces\n    const pool = Array.apply(null, Array(max + 1)).map(function (_, i) { return i; });\n    let arr = [];\n    while (arr.length < max) {\n      const idx = Math.floor(Math.random() * dogBingoOptions.length)\n      const dogEl = dogBingoOptions[idx]\n      console.log(idx)\n      if (pool[idx] != 0) {\n        arr.push(dogEl);\n        pool[idx] = 0;\n      }\n    }\n    return arr;\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Bingo</h1>\n        <div className=\"button-container\">\n          <Button variant=\"contained\" color=\"primary\" onClick={this.handleClear}>Clear</Button>\n          <Button variant=\"contained\" color=\"primary\" onClick={this.handleGenerateRandom}>New Card</Button>\n        </div>\n        <div className=\"Game__bingo_card\">\n          <Card\n            hits={this.state.hits}\n            slots={this.state.slots}\n            dimension={dimension}\n            handle={this.handleClick}\n          />\n        </div>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}