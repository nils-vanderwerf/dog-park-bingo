{"ast":null,"code":"import _classCallCheck from\"/Users/nilsvanderwerf/Development/code/coding-exercises/dog-park-bingo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/nilsvanderwerf/Development/code/coding-exercises/dog-park-bingo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/nilsvanderwerf/Development/code/coding-exercises/dog-park-bingo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/nilsvanderwerf/Development/code/coding-exercises/dog-park-bingo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/nilsvanderwerf/Development/code/coding-exercises/dog-park-bingo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import BingoItem from'./BingoItem';import{Grid}from'@material-ui/core';import'../App.css';import{jsx as _jsx}from\"react/jsx-runtime\";var Card=/*#__PURE__*/function(_Component){_inherits(Card,_Component);var _super=_createSuper(Card);function Card(props){var _this;_classCallCheck(this,Card);_this=_super.call(this,props);_this.createRows=function(){var _this$props=_this.props,slots=_this$props.slots,dimension=_this$props.dimension;console.log(\"SLOTS\",slots);var bingoRows=[];for(var i=0;i<dimension;i++){bingoRows[i]=slots.slice(dimension*i,dimension*i+dimension);}return bingoRows;};_this.state={rows:[]};_this.createRows=_this.createRows.bind(_assertThisInitialized(_this));return _this;}_createClass(Card,[{key:\"render\",value:function render(){var gridSquare=this.props.dimension*this.props.dimension;var card_tiles=[];for(var i=0;i<gridSquare;i++){card_tiles.push(/*#__PURE__*/_jsx(Grid,{item:true,style:{width:\"calc(100% / \".concat(this.props.dimension),aspectRatio:'1'},children:/*#__PURE__*/_jsx(BingoItem,{lined:(this.props.hit_lines||[]).includes(i),idx:i,slots:this.props.slots,handleClick:this.props.handle,dimension:this.props.dimension},i)}));}// this.props.slots.map((s, i) => \n// <Grid item style={{width: '20%'}}>\n// <BingoItem key={i} active={ ((this.props.hits || []).includes(s)) } \n//   lined={ ((this.props.hit_lines || []).includes(i)) }\n//   idx={i} slot={s} \n//   handle={this.props.handle}\n// />\n// </Grid>\nreturn/*#__PURE__*/_jsx(Grid,{container:true,className:\"bingo_card\",xs:12,children:card_tiles});}}]);return Card;}(Component);export{Card as default};","map":{"version":3,"sources":["/Users/nilsvanderwerf/Development/code/coding-exercises/dog-park-bingo/src/components/Card.js"],"names":["React","Component","BingoItem","Grid","Card","props","createRows","slots","dimension","console","log","bingoRows","i","slice","state","rows","bind","gridSquare","card_tiles","push","width","aspectRatio","hit_lines","includes","handle"],"mappings":"i7BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,OAASC,IAAT,KAAqB,mBAArB,CAEA,MAAO,YAAP,C,8CAEqBC,CAAAA,I,4FACnB,cAAYC,KAAZ,CAAmB,sCACjB,uBAAMA,KAAN,EADiB,MASnBC,UATmB,CASN,UAAM,iBACY,MAAKD,KADjB,CACTE,KADS,aACTA,KADS,CACFC,SADE,aACFA,SADE,CAEjBC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAqBH,KAArB,EACA,GAAII,CAAAA,SAAS,CAAG,EAAhB,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGJ,SAApB,CAA+BI,CAAC,EAAhC,CAAoC,CAClCD,SAAS,CAACC,CAAD,CAAT,CAAeL,KAAK,CAACM,KAAN,CAAYL,SAAS,CAAGI,CAAxB,CAA2BJ,SAAS,CAAGI,CAAZ,CAAgBJ,SAA3C,CAAf,CACD,CACD,MAAOG,CAAAA,SAAP,CACD,CAjBkB,CAEjB,MAAKG,KAAL,CAAa,CACXC,IAAI,CAAE,EADK,CAAb,CAGA,MAAKT,UAAL,CAAkB,MAAKA,UAAL,CAAgBU,IAAhB,+BAAlB,CALiB,aAOlB,C,uCAaD,iBAAS,CACP,GAAMC,CAAAA,UAAU,CAAG,KAAKZ,KAAL,CAAWG,SAAX,CAAuB,KAAKH,KAAL,CAAWG,SAArD,CACA,GAAIU,CAAAA,UAAU,CAAG,EAAjB,CACA,IAAK,GAAIN,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGK,UAApB,CAAgCL,CAAC,EAAjC,CAAqC,CAEnCM,UAAU,CAACC,IAAX,cACE,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,KAAK,CAAE,CAACC,KAAK,uBAAiB,KAAKf,KAAL,CAAWG,SAA5B,CAAN,CAA+Ca,WAAW,CAAE,GAA5D,CAAlB,uBACE,KAAC,SAAD,EAEE,KAAK,CAAG,CAAC,KAAKhB,KAAL,CAAWiB,SAAX,EAAwB,EAAzB,EAA6BC,QAA7B,CAAsCX,CAAtC,CAFV,CAGE,GAAG,CAAEA,CAHP,CAGU,KAAK,CAAE,KAAKP,KAAL,CAAWE,KAH5B,CAIE,WAAW,CAAE,KAAKF,KAAL,CAAWmB,MAJ1B,CAKE,SAAS,CAAE,KAAKnB,KAAL,CAAWG,SALxB,EACOI,CADP,CADF,EADF,EAWD,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,mBACE,KAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,SAAS,CAAC,YAA1B,CAAuC,EAAE,CAAE,EAA3C,UACGM,UADH,EADF,CAKD,C,kBApD+BjB,S,SAAbG,I","sourcesContent":["import React, { Component } from 'react'\nimport BingoItem from './BingoItem'\nimport { Grid } from '@material-ui/core';\n\nimport '../App.css'\n\nexport default class Card extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      rows: []\n    }\n    this.createRows = this.createRows.bind(this)\n    \n  }\n\n  createRows = () => {\n    const { slots, dimension } = this.props\n    console.log(\"SLOTS\", slots)\n    let bingoRows = [];\n    for (let i = 0; i < dimension; i++) {\n      bingoRows[i] = slots.slice(dimension * i, dimension * i + dimension)\n    }\n    return bingoRows\n  }\n\n\n  render() {\n    const gridSquare = this.props.dimension * this.props.dimension\n    let card_tiles = [];\n    for (let i = 0; i < gridSquare; i++) {\n      \n      card_tiles.push(\n        <Grid item style={{width: `calc(100% / ${this.props.dimension}`, aspectRatio: '1'}}>\n          <BingoItem\n            key={i}\n            lined={((this.props.hit_lines || []).includes(i))}\n            idx={i} slots={this.props.slots}\n            handleClick={this.props.handle}\n            dimension={this.props.dimension}\n          />\n        </Grid>\n      )\n    }\n    // this.props.slots.map((s, i) => \n    // <Grid item style={{width: '20%'}}>\n    // <BingoItem key={i} active={ ((this.props.hits || []).includes(s)) } \n    //   lined={ ((this.props.hit_lines || []).includes(i)) }\n    //   idx={i} slot={s} \n    //   handle={this.props.handle}\n    // />\n    // </Grid>\n\n    return (\n      <Grid container className=\"bingo_card\" xs={12}>\n        {card_tiles}\n      </Grid>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}