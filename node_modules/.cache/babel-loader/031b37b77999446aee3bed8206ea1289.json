{"ast":null,"code":"var _jsxFileName = \"/Users/nilsvanderwerf/Development/code/coding-exercises/dog-park-bingo/src/components/Card.js\";\nimport React, { Component } from 'react';\nimport BingoItem from './BingoItem';\nimport { Grid } from '@material-ui/core';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Card extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createRows = () => {\n      const {\n        slots,\n        dimension\n      } = this.props;\n      console.log(\"SLOTS\", slots);\n      let bingoRows = [];\n\n      for (let i = 0; i < dimension; i++) {\n        bingoRows[i] = slots.slice(dimension * i, dimension * i + dimension);\n      }\n\n      return bingoRows;\n    };\n\n    this.state = {\n      rows: []\n    };\n    this.createRows = this.createRows.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  render() {\n    const gridSquare = this.props.dimension * this.props.dimension;\n    let card_tiles = [];\n\n    for (let i = 0; i < gridSquare; i++) {\n      card_tiles.push( /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        style: {\n          width: '20%'\n        },\n        children: /*#__PURE__*/_jsxDEV(BingoItem, {\n          lined: (this.props.hit_lines || []).includes(i),\n          idx: i,\n          slots: this.props.slots\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this));\n    } // this.props.slots.map((s, i) => \n    // <Grid item style={{width: '20%'}}>\n    // <BingoItem key={i} active={ ((this.props.hits || []).includes(s)) } \n    //   lined={ ((this.props.hit_lines || []).includes(i)) }\n    //   idx={i} slot={s} \n    //   handle={this.props.handle}\n    // />\n    // </Grid>\n\n\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: \"bingo_card\",\n      xs: 12,\n      children: card_tiles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/nilsvanderwerf/Development/code/coding-exercises/dog-park-bingo/src/components/Card.js"],"names":["React","Component","BingoItem","Grid","Card","constructor","props","createRows","slots","dimension","console","log","bingoRows","i","slice","state","rows","bind","handleClick","render","gridSquare","card_tiles","push","width","hit_lines","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA,OAAO,YAAP;;AAEA,eAAe,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AACxCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,UATmB,GASN,MAAM;AACjB,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAuB,KAAKH,KAAlC;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,KAArB;AACA,UAAII,SAAS,GAAG,EAAhB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,SAApB,EAA+BI,CAAC,EAAhC,EAAoC;AAClCD,QAAAA,SAAS,CAACC,CAAD,CAAT,GAAeL,KAAK,CAACM,KAAN,CAAYL,SAAS,GAAGI,CAAxB,EAA2BJ,SAAS,GAAGI,CAAZ,GAAgBJ,SAA3C,CAAf;AACD;;AACF,aAAOG,SAAP;AACE,KAjBgB;;AAEf,SAAKG,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAGA,SAAKT,UAAL,GAAkB,KAAKA,UAAL,CAAgBU,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAYDE,EAAAA,MAAM,GAAG;AACP,UAAMC,UAAU,GAAG,KAAKd,KAAL,CAAWG,SAAX,GAAuB,KAAKH,KAAL,CAAWG,SAArD;AACA,QAAIY,UAAU,GAAG,EAAjB;;AACA,SAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGO,UAApB,EAAgCP,CAAC,EAAjC,EAAqC;AACnCQ,MAAAA,UAAU,CAACC,IAAX,eACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR,SAAlB;AAAA,+BACE,QAAC,SAAD;AAEE,UAAA,KAAK,EAAI,CAAC,KAAKjB,KAAL,CAAWkB,SAAX,IAAwB,EAAzB,EAA6BC,QAA7B,CAAsCZ,CAAtC,CAFX;AAGE,UAAA,GAAG,EAAEA,CAHP;AAGU,UAAA,KAAK,EAAE,KAAKP,KAAL,CAAWE;AAH5B,WACOK,CADP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AASD,KAbM,CAcP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEE,wBACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAC,YAA1B;AAAuC,MAAA,EAAE,EAAE,EAA3C;AAAA,gBACOQ;AADP;AAAA;AAAA;AAAA;AAAA,YADF;AAKH;;AAhDuC","sourcesContent":["import React, { Component } from 'react'\nimport BingoItem from './BingoItem'\nimport { Grid } from '@material-ui/core';\n\nimport '../App.css'\n\nexport default class Card extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            rows: []\n        }\n        this.createRows = this.createRows.bind(this)\n        this.handleClick = this.handleClick.bind(this)\n    }\n\n    createRows = () => {\n      const { slots, dimension } = this.props\n      console.log(\"SLOTS\", slots)\n      let bingoRows = [];\n      for (let i = 0; i < dimension; i++) {\n        bingoRows[i] = slots.slice(dimension * i, dimension * i + dimension)\n      }\n     return bingoRows\n      }\n      \n    render() {\n      const gridSquare = this.props.dimension * this.props.dimension\n      let card_tiles = [];\n      for (let i = 0; i < gridSquare; i++) {\n        card_tiles.push(\n          <Grid item style={{width: '20%'}}>\n            <BingoItem \n              key={i}\n              lined={ ((this.props.hit_lines || []).includes(i)) }\n              idx={i} slots={this.props.slots}\n            />\n          </Grid>\n        )\n      }\n      // this.props.slots.map((s, i) => \n      // <Grid item style={{width: '20%'}}>\n      // <BingoItem key={i} active={ ((this.props.hits || []).includes(s)) } \n      //   lined={ ((this.props.hit_lines || []).includes(i)) }\n      //   idx={i} slot={s} \n      //   handle={this.props.handle}\n      // />\n      // </Grid>\n\n        return (\n          <Grid container className=\"bingo_card\" xs={12}>\n                {card_tiles}\n            </Grid>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}