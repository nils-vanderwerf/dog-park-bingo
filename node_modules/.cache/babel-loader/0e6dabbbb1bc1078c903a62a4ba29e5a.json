{"ast":null,"code":"var _jsxFileName = \"/Users/nilsvanderwerf/Development/code/coding-exercises/dog-park-bingo/src/App.js\";\nimport React, { Component } from 'react';\nimport { dogBingoOptions } from './constants/dogBingoOptions';\nimport Card from './components/Card'; // import './App.css'\n\nimport { styled } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet dimension = 5;\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClear = () => {\n      const textConts = document.querySelectorAll('span.text-content');\n\n      for (let i = 0; i < textConts.length; i++) {\n        textConts[i].innerHTML = \"\";\n      } //Remove marked from squares\n\n\n      this.removeMarked();\n    };\n\n    this.removeMarked = () => {\n      const squares = document.getElementsByClassName('square');\n\n      for (let i = 0; i < squares.length; i++) {\n        squares[i].classList.remove('mark-found');\n      }\n    };\n\n    this.handleGenerateRandom = () => {\n      console.log(this.state.options);\n      const randCards = this.generateCards(dimension * dimension);\n      console.log(randCards);\n      this.setState({\n        slots: randCards\n      }, function () {\n        this.fillSquares();\n      });\n      this.removeMarked();\n    };\n\n    this.generateCards = max => {\n      //Create pool of spaces\n      const pool = Array.apply(null, Array(max + 1)).map(function (_, i) {\n        return i;\n      });\n      let arr = [];\n\n      while (arr.length < max) {\n        const idx = Math.floor(Math.random() * dogBingoOptions.length);\n        const dogEl = dogBingoOptions[idx];\n        console.log(idx);\n\n        if (pool[idx] != 0) {\n          arr.push(dogEl);\n          pool[idx] = 0;\n        }\n      }\n\n      return arr;\n    };\n\n    this.state = {\n      pick: new Array(dimension * dimension).fill(0),\n      slots: [],\n      rows: [],\n      column: [],\n      options: dogBingoOptions,\n      hits: [],\n      previouslyCompleted: []\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleGenerateRandom = this.handleGenerateRandom.bind(this);\n  }\n\n  handleClick(event) {\n    event.target.classList.add(\"mark-found\");\n    console.log(\"TARGET CHILDREN\", event.target.lastChild.id);\n    this.setState({\n      hits: [...this.state.hits, event.target.lastChild.id]\n    }, function () {\n      this.checkLine(event.target.lastChild.id);\n    });\n  }\n\n  fillSquares() {\n    const textConts = document.querySelectorAll('span.text-content');\n\n    for (let i = 0; i < textConts.length; i++) {\n      textConts[i].setAttribute(\"id\", i);\n      textConts[i].innerHTML = this.state.slots[i];\n    }\n  }\n\n  handleGo() {\n    const hit_pool = this.state.hit_pool;\n    const hits = hit_pool.slice(0, this.state.hit_step + 1);\n    this.setState({\n      hits: hits,\n      hit_step: this.state.hit_step + 1\n    });\n  }\n\n  handleClear() {\n    this.setState({\n      pick: new Array(dimension * dimension).fill(0),\n      slots: [],\n      result: [],\n      nxtNum: 1,\n      hits: null,\n      hit_pool: this.generateNums(dimension * dimension),\n      hit_step: 0\n    });\n  }\n\n  handleAdd() {\n    const pick = this.state.pick;\n    let slots = this.state.slots;\n    slots.push(pick);\n    this.setState({\n      slots: slots,\n      pick: new Array(dimension * dimension).fill(0),\n      nxtNum: 1\n    });\n  }\n\n  checkLine(clickedEl) {\n    console.log(\"CLICKED EL\", clickedEl);\n    const lines = [//       [0,1,2,3,4],\n      //       [5,6,7,8,9],\n      //       [10,11,12,13,14],\n      //       [15,16,17,18,19],\n      //       [20,21,22,23,24],\n      //       [0,5,10,15,20],\n      //       [1,6,11,16,21],\n      //       [2,7,12,17,22],\n      //       [3,8,13,18,23],\n      //       [4,9,14,19,24],\n      // [0,6,12,18,24],\n      // [4,8,12,16,20]\n    ];\n    let slash1 = [];\n    let slash2 = [];\n\n    for (let i = 0; i < dimension; i++) {\n      let row = [];\n      let col = [];\n\n      for (var o = 0; o < dimension; o++) {\n        row.push(o + dimension * i);\n        col.push(o * dimension + i);\n      }\n\n      lines.push(row);\n      lines.push(col);\n      slash1.push(i + dimension * i);\n      slash2.push((dimension - 1) * (i + 1));\n    }\n\n    lines.push(slash1);\n    lines.push(slash2);\n    const hits = this.state.hits.map(hit => parseInt(hit));\n    let rtn = [];\n    console.log(\"PARSE INT HITS\", hits);\n    console.log(hits, lines);\n\n    for (let i = 0; i < lines.length; i++) {\n      if (lines[i].every(c => hits.includes(c))) {\n        alert(`LINE ${i} COMPLETE!`);\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Bingo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleClear,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleGenerateRandom,\n        children: \"New Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Game__bingo_card\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          hits: this.state.hits,\n          slots: this.state.slots,\n          dimension: dimension,\n          handle: this.handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/nilsvanderwerf/Development/code/coding-exercises/dog-park-bingo/src/App.js"],"names":["React","Component","dogBingoOptions","Card","styled","dimension","App","constructor","props","handleClear","textConts","document","querySelectorAll","i","length","innerHTML","removeMarked","squares","getElementsByClassName","classList","remove","handleGenerateRandom","console","log","state","options","randCards","generateCards","setState","slots","fillSquares","max","pool","Array","apply","map","_","arr","idx","Math","floor","random","dogEl","push","pick","fill","rows","column","hits","previouslyCompleted","handleClick","bind","event","target","add","lastChild","id","checkLine","setAttribute","handleGo","hit_pool","slice","hit_step","result","nxtNum","generateNums","handleAdd","clickedEl","lines","slash1","slash2","row","col","o","hit","parseInt","rtn","every","c","includes","alert","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { dogBingoOptions } from './constants/dogBingoOptions'\nimport Card from './components/Card'\n// import './App.css'\nimport { styled } from '@material-ui/core/styles';\nlet dimension = 5;\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pick: new Array(dimension * dimension).fill(0),\n      slots: [],\n      rows: [],\n      column: [],\n      options: dogBingoOptions,\n      hits: [], \n      previouslyCompleted: []\n    }\n    this.handleClick = this.handleClick.bind(this)\n    this.handleClear = this.handleClear.bind(this)\n    this.handleGenerateRandom = this.handleGenerateRandom.bind(this)\n  }\n\n  handleClick(event) {\n    event.target.classList.add(\"mark-found\")\n    console.log(\"TARGET CHILDREN\", event.target.lastChild.id)\n    this.setState({\n      hits: [...this.state.hits, event.target.lastChild.id]\n    }, function () { this.checkLine(event.target.lastChild.id) })\n\n  }\n  handleClear = () => {\n    const textConts = document.querySelectorAll('span.text-content')\n    for (let i = 0; i < textConts.length; i++) {\n      textConts[i].innerHTML = \"\"\n    }\n    //Remove marked from squares\n    this.removeMarked()\n  }\n\n  removeMarked = () => {\n    const squares = document.getElementsByClassName('square')\n    for (let i = 0; i < squares.length; i++) {\n      squares[i].classList.remove('mark-found')\n    }\n  }\n\n  handleGenerateRandom = () => {\n    console.log(this.state.options)\n    const randCards = this.generateCards(dimension * dimension)\n    console.log(randCards)\n    this.setState({\n      slots: randCards,\n    }, function () { this.fillSquares() })\n    this.removeMarked()\n  }\n\n  fillSquares() {\n    const textConts = document.querySelectorAll('span.text-content')\n    for (let i = 0; i < textConts.length; i++) {\n      textConts[i].setAttribute(\"id\", i)\n      textConts[i].innerHTML = this.state.slots[i]\n    }\n  }\n\n  handleGo() {\n    const hit_pool = this.state.hit_pool;\n    const hits = hit_pool.slice(0, this.state.hit_step + 1);\n    this.setState({\n      hits: hits,\n      hit_step: this.state.hit_step + 1\n    });\n  }\n\n  handleClear() {\n    this.setState({\n      pick: new Array(dimension * dimension).fill(0),\n      slots: [],\n      result: [],\n      nxtNum: 1,\n      hits: null,\n      hit_pool: this.generateNums(dimension * dimension),\n      hit_step: 0\n    });\n  }\n\n  handleAdd() {\n    const pick = this.state.pick;\n    let slots = this.state.slots;\n    slots.push(pick)\n    this.setState({\n      slots: slots,\n      pick: new Array(dimension * dimension).fill(0),\n      nxtNum: 1,\n    });\n  }\n\n  checkLine(clickedEl) {\n    console.log(\"CLICKED EL\", clickedEl)\n    const lines = [\n      //       [0,1,2,3,4],\n      //       [5,6,7,8,9],\n      //       [10,11,12,13,14],\n      //       [15,16,17,18,19],\n      //       [20,21,22,23,24],\n\n      //       [0,5,10,15,20],\n      //       [1,6,11,16,21],\n      //       [2,7,12,17,22],\n      //       [3,8,13,18,23],\n      //       [4,9,14,19,24],\n\n      // [0,6,12,18,24],\n      // [4,8,12,16,20]\n    ];\n\n    let slash1 = [];\n    let slash2 = [];\n\n    for (let i = 0; i < dimension; i++) {\n      let row = [];\n      let col = [];\n      for (var o = 0; o < dimension; o++) {\n        row.push(o + dimension * i);\n        col.push(o * dimension + i);\n      }\n      lines.push(row);\n      lines.push(col);\n\n      slash1.push(i + dimension * i);\n      slash2.push((dimension - 1) * (i + 1));\n    }\n    lines.push(slash1);\n    lines.push(slash2);\n\n    const hits = this.state.hits.map(hit => parseInt(hit));\n    let rtn = [];\n\n    console.log(\"PARSE INT HITS\", hits)\n\n    console.log(hits, lines)\n\n    for(let i = 0; i < lines.length; i++){\n      if (lines[i].every(c => hits.includes(c))) {\n        alert(`LINE ${i} COMPLETE!`)\n      }\n  }\n  \n\n}\n\n  generateCards = (max) => {\n    //Create pool of spaces\n    const pool = Array.apply(null, Array(max + 1)).map(function (_, i) { return i; });\n    let arr = [];\n    while (arr.length < max) {\n      const idx = Math.floor(Math.random() * dogBingoOptions.length)\n      const dogEl = dogBingoOptions[idx]\n      console.log(idx)\n      if (pool[idx] != 0) {\n        arr.push(dogEl);\n        pool[idx] = 0;\n      }\n    }\n    return arr;\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Bingo</h1>\n        <button onClick={this.handleClear}>Clear</button>\n        <button onClick={this.handleGenerateRandom}>New Card</button>\n        <div className=\"Game__bingo_card\">\n          <Card\n            hits={this.state.hits}\n            slots={this.state.slots}\n            dimension={dimension}\n            handle={this.handleClick}\n          />\n        </div>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}