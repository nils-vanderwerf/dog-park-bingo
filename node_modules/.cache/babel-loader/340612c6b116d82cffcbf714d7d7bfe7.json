{"ast":null,"code":"var _jsxFileName = \"/Users/nilsvanderwerf/Development/code/coding-exercises/dog-park-bingo/src/components/Card.js\";\nimport React, { Component } from 'react';\nimport BingoRow from './BingoRow';\nimport BingoItem from './BingoItem';\nimport { Grid } from '@material-ui/core';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Card extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createRows = () => {\n      const {\n        slots,\n        dimension\n      } = this.props;\n      console.log(\"SLOTS\", slots);\n      let bingoRows = [];\n\n      for (let i = 0; i < dimension; i++) {\n        bingoRows[i] = slots.slice(dimension * i, dimension * i + dimension);\n      }\n\n      return bingoRows;\n    };\n\n    this.state = {\n      rows: []\n    };\n    this.createRows = this.createRows.bind(this);\n  }\n\n  componentDidMount() {\n    let bingoRows = this.createRows();\n    this.setState({\n      rows: bingoRows\n    });\n  }\n\n  render() {\n    /*#__PURE__*/\n    _jsxDEV(Card, {\n      hits: this.state.hits,\n      slots: this.state.slots,\n      dimension: dimension\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n\n    const rowsCopy = this.state.rows;\n    console.log(rowsCopy);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bingo_card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"square\",\n        style: {\n          width: '19%' * dimension\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/nilsvanderwerf/Development/code/coding-exercises/dog-park-bingo/src/components/Card.js"],"names":["React","Component","BingoRow","BingoItem","Grid","Card","constructor","props","createRows","slots","dimension","console","log","bingoRows","i","slice","state","rows","bind","componentDidMount","setState","render","hits","rowsCopy","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA,OAAO,YAAP;;AAEA,eAAe,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AACxCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAgBnBC,UAhBmB,GAgBN,MAAM;AACjB,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAuB,KAAKH,KAAlC;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,KAArB;AACA,UAAII,SAAS,GAAG,EAAhB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,SAApB,EAA+BI,CAAC,EAAhC,EAAoC;AAClCD,QAAAA,SAAS,CAACC,CAAD,CAAT,GAAeL,KAAK,CAACM,KAAN,CAAYL,SAAS,GAAGI,CAAxB,EAA2BJ,SAAS,GAAGI,CAAZ,GAAgBJ,SAA3C,CAAf;AACD;;AACF,aAAOG,SAAP;AACE,KAxBgB;;AAEf,SAAKG,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAIA,SAAKT,UAAL,GAAkB,KAAKA,UAAL,CAAgBU,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAIN,SAAS,GAAG,KAAKL,UAAL,EAAhB;AACA,SAAKY,QAAL,CAAc;AACZH,MAAAA,IAAI,EAAEJ;AADM,KAAd;AAGD;;AAYDQ,EAAAA,MAAM,GAAG;AACP;AAAA,YAAC,IAAD;AACA,MAAA,IAAI,EAAE,KAAKL,KAAL,CAAWM,IADjB;AAEA,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWP,KAFlB;AAGA,MAAA,SAAS,EAAEC;AAHX;AAAA;AAAA;AAAA;AAAA;;AAKA,UAAMa,QAAQ,GAAG,KAAKP,KAAL,CAAWC,IAA5B;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYW,QAAZ;AAEE,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE;AAAK,QAAA,KAAK,EAAC,QAAX;AAAoB,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE,QAAQd;AAAhB;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAOH;;AA3CuC","sourcesContent":["import React, { Component } from 'react'\nimport BingoRow from './BingoRow';\nimport BingoItem from './BingoItem'\nimport { Grid } from '@material-ui/core';\n\nimport '../App.css'\n\nexport default class Card extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            rows: []\n        }\n\n        this.createRows = this.createRows.bind(this)\n    }\n\n    componentDidMount() {\n      let bingoRows = this.createRows()\n      this.setState({\n        rows: bingoRows,\n      })\n    }\n\n    createRows = () => {\n      const { slots, dimension } = this.props\n      console.log(\"SLOTS\", slots)\n      let bingoRows = [];\n      for (let i = 0; i < dimension; i++) {\n        bingoRows[i] = slots.slice(dimension * i, dimension * i + dimension)\n      }\n     return bingoRows\n      }\n      \n    render() {\n      <Card\n      hits={this.state.hits}\n      slots={this.state.slots}\n      dimension={dimension}\n    />\n      const rowsCopy = this.state.rows\n      console.log(rowsCopy)\n\n        return (\n          <div className=\"bingo_card\">\n            <div class=\"square\" style={{width: '19%' * dimension }}>\n              \n            </div>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}