{"ast":null,"code":"var _jsxFileName = \"/Users/nilsvanderwerf/Development/code/coding-exercises/dog-park-bingo/src/App.js\";\nimport React, { Component } from 'react';\nimport { dogBingoOptions } from './constants/dogBingoOptions';\nimport Card from './components/Card'; // import './App.css'\n\nimport { styled } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport Dialogue from './components/Dialogue';\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles'; // SET TO MAX OF 9 or add more options\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let dimension = 5;\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#07B0F2'\n    },\n    alert: {\n      main: '#038C4C'\n    }\n  }\n});\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClear = () => {\n      const textConts = document.querySelectorAll('span.text-content');\n\n      for (let i = 0; i < textConts.length; i++) {\n        textConts[i].innerHTML = \"\";\n      } //Remove marked from squares\n\n\n      this.setState({\n        hits: [],\n        prevCompleted: []\n      });\n      this.removeMarked();\n    };\n\n    this.removeMarked = () => {\n      const squares = document.getElementsByClassName('square');\n\n      for (let i = 0; i < squares.length; i++) {\n        squares[i].classList.remove('mark-found', 'mark-line-complete');\n      }\n    };\n\n    this.handleGenerateRandom = () => {\n      console.log(this.state.options);\n      const randCards = this.generateCards(dimension * dimension);\n      console.log(randCards);\n      this.setState({\n        slots: randCards,\n        hits: [],\n        prevCompleted: []\n      }, function () {\n        this.fillSquares();\n      });\n      this.removeMarked();\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        showState: false\n      });\n    };\n\n    this.indicateCompletedLine = compLine => {\n      console.log(\"LINE COMPLETE\", compLine);\n      compLine.forEach(id => {\n        console.log(\"ID OF COMPLETED\", id);\n        let targElement = document.getElementById(`${id}`).parentElement;\n        console.log(\"TARGETED FINISHED ELEMENT\", targElement);\n        targElement.classList.add('mark-line-complete');\n      });\n      alert.classList.add('make-visible'); //Check if all squares have been checked\n    };\n\n    this.checkWholeSquare = () => {\n      if (this.state.hits.length >= this.state.slots.length && this.state.slots.length !== 0) {\n        //Replace with modal\n        this.setState({\n          showState: true\n        });\n      }\n    };\n\n    this.generateCards = max => {\n      //Create pool of spaces\n      const pool = Array.apply(null, Array(max + 1)).map(function (_, i) {\n        return i;\n      });\n      let arr = [];\n\n      while (arr.length < max) {\n        const idx = Math.floor(Math.random() * dogBingoOptions.length);\n        const dogEl = dogBingoOptions[idx];\n        console.log(idx);\n\n        if (pool[idx] != 0) {\n          arr.push(dogEl);\n          pool[idx] = 0;\n        }\n      }\n\n      return arr;\n    };\n\n    this.state = {\n      pick: new Array(dimension * dimension).fill(0),\n      slots: [],\n      rows: [],\n      column: [],\n      options: dogBingoOptions,\n      hits: [],\n      prevCompleted: [],\n      showState: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleGenerateRandom = this.handleGenerateRandom.bind(this);\n  }\n\n  handleClick(event) {\n    event.target.classList.add(\"mark-found\");\n    if (event.target.lastChild.id !== undefined && !this.state.hits.includes(event.target.lastChild.id)) this.setState({\n      hits: [...this.state.hits, event.target.lastChild.id]\n    }, function () {\n      this.checkLine(event.target.lastChild.id);\n    });\n\n    if (alert.classList.contains(\"make-visible\")) {\n      alert.classList.remove(\"make-visible\");\n    }\n  }\n\n  fillSquares() {\n    const textConts = document.querySelectorAll('span.text-content');\n\n    for (let i = 0; i < textConts.length; i++) {\n      textConts[i].setAttribute(\"id\", i);\n      textConts[i].innerHTML = this.state.slots[i];\n    }\n  }\n\n  handleGo() {\n    const hit_pool = this.state.hit_pool;\n    const hits = hit_pool.slice(0, this.state.hit_step + 1);\n    this.setState({\n      hits: hits,\n      hit_step: this.state.hit_step + 1\n    });\n  }\n\n  handleClear() {\n    this.setState({\n      pick: new Array(dimension * dimension).fill(0),\n      slots: [],\n      result: [],\n      nxtNum: 1,\n      hits: null,\n      hit_pool: this.generateNums(dimension * dimension),\n      hit_step: 0\n    });\n  }\n\n  handleAdd() {\n    const pick = this.state.pick;\n    let slots = this.state.slots;\n    slots.push(pick);\n    this.setState({\n      slots: slots,\n      pick: new Array(dimension * dimension).fill(0),\n      nxtNum: 1\n    });\n  }\n\n  checkLine(clickedEl) {\n    const lines = [//       [0,1,2,3,4],\n      //       [5,6,7,8,9],\n      //       [10,11,12,13,14],\n      //       [15,16,17,18,19],\n      //       [20,21,22,23,24],\n      //       [0,5,10,15,20],\n      //       [1,6,11,16,21],\n      //       [2,7,12,17,22],\n      //       [3,8,13,18,23],\n      //       [4,9,14,19,24],\n      // [0,6,12,18,24],\n      // [4,8,12,16,20]\n    ];\n    let slash1 = [];\n    let slash2 = [];\n\n    for (let i = 0; i < dimension; i++) {\n      let row = [];\n      let col = [];\n\n      for (var o = 0; o < dimension; o++) {\n        row.push(o + dimension * i);\n        col.push(o * dimension + i);\n      }\n\n      lines.push(row);\n      lines.push(col);\n      slash1.push(i + dimension * i);\n      slash2.push((dimension - 1) * (i + 1));\n    }\n\n    lines.push(slash1);\n    lines.push(slash2);\n    console.log(\"LINES\", lines);\n    const hits = this.state.hits.map(hit => parseInt(hit));\n\n    for (let i = 0; i < lines.length; i++) {\n      //If the hits includes every member of a line\n      //and the prev completed array has not been completed before\n      if (lines[i].every(c => hits.includes(c)) && !this.state.prevCompleted.includes(i) && this.state.slots.length !== 0) {\n        // alert(`LINE ${i} COMPLETE!`)\n        this.indicateCompletedLine(lines[i]);\n        this.setState({\n          prevCompleted: [...this.state.prevCompleted, i]\n        });\n      }\n    }\n\n    this.checkWholeSquare();\n  }\n\n  render() {\n    const alert = document.getElementById(\"complete-alert\");\n    console.log(\"ALERT\", alert);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Bingo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-inner\",\n          children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n            theme: theme,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: this.handleClear,\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: this.handleGenerateRandom,\n              children: \"New Card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        id: \"completed-line\",\n        variant: \"filled\",\n        severity: \"success\",\n        children: \"Line Complete!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Game__bingo_card\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          hits: this.state.hits,\n          slots: this.state.slots,\n          dimension: dimension,\n          handle: this.handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: theme,\n        children: /*#__PURE__*/_jsxDEV(Dialogue, {\n          handleClose: this.handleClose,\n          showState: this.state.showState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/nilsvanderwerf/Development/code/coding-exercises/dog-park-bingo/src/App.js"],"names":["React","Component","dogBingoOptions","Card","styled","Button","Alert","Dialogue","createTheme","ThemeProvider","dimension","styles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","primary","main","alert","App","constructor","props","handleClear","textConts","document","querySelectorAll","i","length","innerHTML","setState","hits","prevCompleted","removeMarked","squares","getElementsByClassName","classList","remove","handleGenerateRandom","console","log","state","options","randCards","generateCards","slots","fillSquares","handleClose","showState","indicateCompletedLine","compLine","forEach","id","targElement","getElementById","parentElement","add","checkWholeSquare","max","pool","Array","apply","map","_","arr","idx","Math","floor","random","dogEl","push","pick","fill","rows","column","handleClick","bind","event","target","lastChild","undefined","includes","checkLine","contains","setAttribute","handleGo","hit_pool","slice","hit_step","result","nxtNum","generateNums","handleAdd","clickedEl","lines","slash1","slash2","row","col","o","hit","parseInt","every","c","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { dogBingoOptions } from './constants/dogBingoOptions'\nimport Card from './components/Card'\n// import './App.css'\nimport { styled } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport Dialogue from './components/Dialogue';\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\n\n// SET TO MAX OF 9 or add more options\nexport let dimension = 5;\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#07B0F2',\n    },\n    alert: {\n      main: '#038C4C'\n    }\n  },\n});\n\n\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pick: new Array(dimension * dimension).fill(0),\n      slots: [],\n      rows: [],\n      column: [],\n      options: dogBingoOptions,\n      hits: [],\n      prevCompleted: [],\n      showState: false\n    }\n    this.handleClick = this.handleClick.bind(this)\n    this.handleClear = this.handleClear.bind(this)\n    this.handleGenerateRandom = this.handleGenerateRandom.bind(this)\n  }\n\n  handleClick(event) {\n    event.target.classList.add(\"mark-found\")\n    if (event.target.lastChild.id !== undefined && !this.state.hits.includes(event.target.lastChild.id))\n      this.setState({\n        hits: [...this.state.hits, event.target.lastChild.id]\n      }, function () { this.checkLine(event.target.lastChild.id) })\n\n      if(alert.classList.contains(\"make-visible\")) {\n        alert.classList.remove(\"make-visible\");\n      }\n  }\n  handleClear = () => {\n    const textConts = document.querySelectorAll('span.text-content')\n    for (let i = 0; i < textConts.length; i++) {\n      textConts[i].innerHTML = \"\"\n    }\n    //Remove marked from squares\n    this.setState({\n      hits: [],\n      prevCompleted: []\n    })\n    this.removeMarked()\n  }\n\n  removeMarked = () => {\n    const squares = document.getElementsByClassName('square')\n    for (let i = 0; i < squares.length; i++) {\n      squares[i].classList.remove('mark-found', 'mark-line-complete')\n    }\n  }\n\n  handleGenerateRandom = () => {\n    console.log(this.state.options)\n    const randCards = this.generateCards(dimension * dimension)\n    console.log(randCards)\n    this.setState({\n      slots: randCards,\n      hits: [],\n      prevCompleted: []\n    }, function () { this.fillSquares() })\n    this.removeMarked()\n  }\n\n  fillSquares() {\n    const textConts = document.querySelectorAll('span.text-content')\n    for (let i = 0; i < textConts.length; i++) {\n      textConts[i].setAttribute(\"id\", i)\n      textConts[i].innerHTML = this.state.slots[i]\n    }\n  }\n\n  handleGo() {\n    const hit_pool = this.state.hit_pool;\n    const hits = hit_pool.slice(0, this.state.hit_step + 1);\n    this.setState({\n      hits: hits,\n      hit_step: this.state.hit_step + 1\n    });\n  }\n\n  handleClear() {\n    this.setState({\n      pick: new Array(dimension * dimension).fill(0),\n      slots: [],\n      result: [],\n      nxtNum: 1,\n      hits: null,\n      hit_pool: this.generateNums(dimension * dimension),\n      hit_step: 0\n    });\n  }\n\n  handleClose = () => {\n    this.setState({\n      showState: false\n    })\n  };\n\n  handleAdd() {\n    const pick = this.state.pick;\n    let slots = this.state.slots;\n    slots.push(pick)\n    this.setState({\n      slots: slots,\n      pick: new Array(dimension * dimension).fill(0),\n      nxtNum: 1,\n    });\n  }\n\n  checkLine(clickedEl) {\n    const lines = [\n      //       [0,1,2,3,4],\n      //       [5,6,7,8,9],\n      //       [10,11,12,13,14],\n      //       [15,16,17,18,19],\n      //       [20,21,22,23,24],\n\n      //       [0,5,10,15,20],\n      //       [1,6,11,16,21],\n      //       [2,7,12,17,22],\n      //       [3,8,13,18,23],\n      //       [4,9,14,19,24],\n\n      // [0,6,12,18,24],\n      // [4,8,12,16,20]\n    ];\n\n    let slash1 = [];\n    let slash2 = [];\n\n    for (let i = 0; i < dimension; i++) {\n      let row = [];\n      let col = [];\n      for (var o = 0; o < dimension; o++) {\n        row.push(o + dimension * i);\n        col.push(o * dimension + i);\n      }\n      lines.push(row);\n      lines.push(col);\n\n      slash1.push(i + dimension * i);\n      slash2.push((dimension - 1) * (i + 1));\n    }\n    lines.push(slash1);\n    lines.push(slash2);\n\n    console.log(\"LINES\", lines)\n\n    const hits = this.state.hits.map(hit => parseInt(hit));\n\n    for (let i = 0; i < lines.length; i++) {\n      //If the hits includes every member of a line\n      //and the prev completed array has not been completed before\n      if (lines[i].every(c => hits.includes(c)) &&\n        !this.state.prevCompleted.includes(i) &&\n        this.state.slots.length !== 0) {\n        // alert(`LINE ${i} COMPLETE!`)\n        this.indicateCompletedLine(lines[i])\n        this.setState({\n          prevCompleted: [...this.state.prevCompleted, i]\n        })\n      }\n    }\n    this.checkWholeSquare()\n  }\n\n  indicateCompletedLine = (compLine) => {\n    console.log(\"LINE COMPLETE\", compLine)\n    compLine.forEach(id => {\n      console.log(\"ID OF COMPLETED\", id)\n      let targElement = document.getElementById(`${id}`).parentElement\n      console.log(\"TARGETED FINISHED ELEMENT\", targElement)\n      \n      targElement.classList.add('mark-line-complete')\n    })\n    alert.classList.add('make-visible');\n    //Check if all squares have been checked\n\n  }\n\n  checkWholeSquare = () => {\n    if (this.state.hits.length >= this.state.slots.length && this.state.slots.length !== 0) {\n      //Replace with modal\n      this.setState({\n        showState: true\n      })\n    }\n  }\n\n  generateCards = (max) => {\n    //Create pool of spaces\n    const pool = Array.apply(null, Array(max + 1)).map(function (_, i) { return i; });\n    let arr = [];\n    while (arr.length < max) {\n      const idx = Math.floor(Math.random() * dogBingoOptions.length)\n      const dogEl = dogBingoOptions[idx]\n      console.log(idx)\n      if (pool[idx] != 0) {\n        arr.push(dogEl);\n        pool[idx] = 0;\n      }\n    }\n    return arr;\n  }\n\n  render() {\n    const alert = document.getElementById(\"complete-alert\")\nconsole.log(\"ALERT\", alert)\n    return (\n      <div className=\"container\">\n        <h1>Bingo</h1>\n        <div className=\"button-container\">\n          <div className=\"container-inner\">\n            <ThemeProvider theme={theme}>\n              <Button variant=\"contained\" color=\"primary\" \n              onClick={this.handleClear}>Clear</Button>\n              <Button variant=\"contained\" color=\"primary\" onClick={this.handleGenerateRandom}>New Card</Button>\n            </ThemeProvider>\n          </div>\n        </div>\n        <Alert id=\"completed-line\" variant=\"filled\" severity=\"success\">\n          Line Complete!\n        </Alert>\n        <div className=\"Game__bingo_card\">\n          <Card\n            hits={this.state.hits}\n            slots={this.state.slots}\n            dimension={dimension}\n            handle={this.handleClick}\n          />\n        </div>\n        <ThemeProvider theme={theme}>\n          <Dialogue\n            handleClose={this.handleClose}\n            showState={this.state.showState}\n          >\n          </Dialogue>\n        </ThemeProvider>\n\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}